# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: build

on:
  push:
    branches:
      - '*'         # matches every branch that doesn't contain a '/'
      - '*/*'       # matches every branch containing a single '/'
      - '**'        # matches every branch
  pull_request:
  release:
    types: [published]
  workflow_dispatch: # manual-trigger-allowed

permissions:
  contents: read

env:
  WORKFLOW_BRANCH: ${{github.ref}}
  WORKFLOW_RUN_ID: ${{github.run_id}}
  WORKFLOW_EVENT_NAME: ${{github.event_name}}
  WORKFLOW_REF_TYPE: ${{github.ref_type}}
  WORKFLOW_REF_NAME: ${{github.ref_name}}
  WORKFLOW_REF_PROTECTED: ${{github.ref_protected}}
  WORKFLOW_EVENT_RELEASE_TARGET: ${{github.event.release.target_commitish}}

jobs:

  build:
    name: Build
    env:
      WORK_ENVT: main
      TZ: Asia/Singapore

    #runs-on: [ ubuntu-latest ]
    runs-on: ubuntu-22.04
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}
    permissions:
      contents: read # for checkout to fetch code
      security-events: write # for github/codeql-action/upload-sarif to upload SARIF results
      actions: read # only required for a private repository by github/codeql-action/upload-sarif to get the Action run status

    steps:
      - name: Self-Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.20'

      - name: Sanity Checks
        id: init-makefile
        run: |
          echo "Build start $(date)"
          make
          sudo apt-get update -y
          sudo apt-get install -y build-essential openssh-client jq curl
      
      - name: Display Go version
        run: go version

      - name: Download dependencies
        id: download-deps
        run: go mod download

      - name: Install dependencies
        id: init-build
        run: go get .

      - name: Linter
        id: ci-lint
        run: |
          make ci-lint
          make clean

      - name: Test
        id: ci-test
        run: |
          make ci-test
          make clean

      - name: Check Workflows
        id: check-workflows
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: |
          echo "

            WORKFLOW_BRANCH      : $WORKFLOW_BRANCH
            GITHUB_SHA           : $GITHUB_SHA
            GITHUB_REF           : $GITHUB_REF
            WORKFLOW_RUN_ID      : $WORKFLOW_RUN_ID
            WORKFLOW_EVENT_NAME  : $WORKFLOW_EVENT_NAME
            WORKFLOW_REF_TYPE    : $WORKFLOW_REF_TYPE
            WORKFLOW_REF_NAME            : $WORKFLOW_REF_NAME
            WORKFLOW_REF_PROTECTED       : $WORKFLOW_REF_PROTECTED
            WORKFLOW_EVENT_RELEASE_TARGET: $WORKFLOW_EVENT_RELEASE_TARGET

            G-CONTEXT:
                $GITHUB_CONTEXT
          "
